추상 데이터 타입을 구현하려면, 

타입 정의를 선언할 수 있어야한다. 
오퍼레이션의 집합을 정의할 수 있어야한다. 
제공된 오퍼레이션을 통해서만 조작할 수 있도록 데이터를 외부로 부터 보호한다.
여러개의 인스턴스 생성이 가능하다.

이렇게 보면 클래스가 하는 일과 굉장히 비슷해 보인다. 

하지만 클래스는 객체지향 프로그래밍이고 추상 데이터 기반의 프로그래밍은 객체기반 프로그래밍이다.

클래스는 객체지향을 따르기 때문에 상속을 하게 되고 다형성을 지니고 있지만 추상 데이터 타입은 그것을 지원하지 않는다. 

클래스는 상속된 객체를 볼때 if 절을 사용하지 않고 객체로 판별한다 (currentPlayingQueue) 처럼. 

그래서 클래스를 사용하기 좋은 경우는 새로운 클래스의 추가가 많을때 이다 그 이유는 새로운 클래스를 만들어 부모 클래스를 상속받아 구현하면 되기 때문이다 .

추상 데이터 타입은 if 절이 계속 늘어날것이다. 

하지만, 이러한 오퍼레이션이 계속 추가가될 상황이면 추상 데이터 타입이 나은데 그 이유는 객체 지향에서는 모든 상속 받는 클래스를 가서 그 오퍼레이션을 구현해 줘야하기 때문이다. 
