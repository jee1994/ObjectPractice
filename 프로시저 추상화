프로시저의 추상화 

탑다운 접근법을 사용하게 되는데 이 접근법에 의하면 위에서 아래로 내려오면서 위에 있는 함수가 밑에 있는 함수를 관장하게 된다. 

하지만 많은 프로그램이 그렇듯 유저의 요구에 따라 기능이 추가되면서 하나의 정점에 있는 함수를 정하기 어렵다. 

또한, 다른 문제는 하나에 함수에서 파생되어저 나오게 되면 데이터에 변경이 있을때마다 정점의 함수부터 타고 내려오는 모든 함수가 변경이 되어야하기 때문에 그 모든 함수를 

찾기 어려울 뿐더러 많은 작업을 요한다. 

또한, 인터페이스와 강하게 결합되어버리고, 함수를 어떻게 할것인가를 정하고 설계를 하기 때문에 변경이 어렵다.

이런 식의 접근은 미리 답이 정해져 있어서 더 추가할 필요가 없을 때 즉 수학 문제의 해설 과 같이 그 내에서 더 이상 추가가 일어나지 않을때 적합한 접근법이다. 
