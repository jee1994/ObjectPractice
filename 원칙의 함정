원칙을 무조건 적으로 따르지말고 상황에 맞게 적절하게 사용하여야 한다.

디미터에서 .을 하나로 제한하는것은 다른 객체의 내부의 구현을 알아내는걸 막을뿐이지 같은 객체안에서는 괜찮다. 

경우에 따라 다르다.....


결합도와 응집도의 충돌 

결합도를 낮추고 응집도를 무리하게 높이려다가 보면 객체가 해도 되지 않는 기능을 해야할때가 있다. (예를 들면 screening 이 할인 조건을 판단하는 책임을 떠안는다던가) 

그렇기 때문에 결합도를 낮추고 응집도를 높이는 작업에는 디미터를 항상 따르거나 항상 나눠주는 것이 옳은 방향은 아니다. 

프로그래머가 생각하기에 적합하다고 생각하면 원칙은 무시 가능하다. 
